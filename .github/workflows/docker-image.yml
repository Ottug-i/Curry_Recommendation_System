name: Flask Docker Image CI/CD

on:
  push:
    branches: [ "deploy" ]

env:
  MYSQL_URL: ${{ secrets.MYSQL_URL }}
  MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
  MYSQL_PW: ${{ secrets.MYSQL_PW }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  DOCKER_IMAGE_NAME: flask
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: deploy

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v0
      with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true    
    - run: |-
          gcloud auth configure-docker

    - name: Replace secrets in py
      working-directory: flask/py
      run: |
        sed -i "s|{MYSQL_URL}|${MYSQL_URL}|g" rating_recommend.py
        sed -i "s|{MYSQL_USERNAME}|${MYSQL_USERNAME}|g" rating_recommend.py
        sed -i "s|{MYSQL_PW}|${MYSQL_PW}|g" rating_recommend.py
    
    - name: Flask Docker Image Build
      run: |-
          docker build . --file Dockerfile --tag "gcr.io/$PROJECT_ID/$DOCKER_IMAGE_NAME:latest"

    - name: Flask Docker Image Push
      run: |-
          docker push "gcr.io/$PROJECT_ID/$DOCKER_IMAGE_NAME:latest"

    - name: SSH into GCP Instance and Run Docker Compose
      uses: appleboy/ssh-action@master
      env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          DOCKER_IMAGE_NAME: flask
      with:
        host: ${{ secrets.GCE_INSTANCE }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
            gcloud auth configure-docker --quiet
            docker container rm ${{ env.DOCKER_IMAGE_NAME }}
            docker image gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.DOCKER_IMAGE_NAME }}:latest
            docker pull gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.DOCKER_IMAGE_NAME }}:latest
            cd /home/smcurry2023
            docker-compose up -d
            docker container prune -f
            docker image prune -f
